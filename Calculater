import flet as ft
import math

def main(page: ft.Page):
    page.title = "Калькулятор"
    page.window_width = 400  # Устанавливаем ширину окна
    page.window_height = 600  # Устанавливаем высоту окна
    page.padding = 10  # Добавляем отступы по краям

    # Поля для ввода чисел
    num1 = ft.TextField(label="Число 1", width=150)
    num2 = ft.TextField(label="Число 2", width=150)

    # Поле для вывода результата
    result_text = ft.Text("Результат: ")

    # Функция обработки нажатия кнопок
    def calculate(e):
        try:
            n1 = float(num1.value)  # Получаем первое число
            operation = e.control.text  # Узнаем, какую кнопку нажали

            # Вычисляем результат
            if operation == "+":
                n2 = float(num2.value)
                result = n1 + n2
            elif operation == "-":
                n2 = float(num2.value)
                result = n1 - n2
            elif operation == "*":
                n2 = float(num2.value)
                result = n1 * n2
            elif operation == "/":
                n2 = float(num2.value)
                if n2 != 0:
                    result = n1 / n2
                else:
                    result = "Ошибка: деление на 0"
            elif operation == "sqrt":
                result = math.sqrt(n1)
            elif operation == "^":
                n2 = float(num2.value)
                result = n1 ** n2
            elif operation == "sin":
                result = math.sin(math.radians(n1))  # Преобразуем в радианы
            elif operation == "cos":
                result = math.cos(math.radians(n1))  # Преобразуем в радианы
            elif operation == "tan":
                result = math.tan(math.radians(n1))  # Преобразуем в радианы
            elif operation == "asin":
                result = math.degrees(math.asin(n1))  # Преобразуем в градусы
            elif operation == "acos":
                result = math.degrees(math.acos(n1))  # Преобразуем в градусы
            elif operation == "atan":
                result = math.degrees(math.atan(n1))  # Преобразуем в градусы
            elif operation == "sinh":
                result = math.sinh(n1)  # Не нужно преобразование
            elif operation == "cosh":
                result = math.cosh(n1)  # Не нужно преобразование
            elif operation == "tanh":
                result = math.tanh(n1)  # Не нужно преобразование
            elif operation == "asinh":
                result = math.asinh(n1)  # Не нужно преобразование
            elif operation == "acosh":
                result = math.acosh(n1)  # Не нужно преобразование
            elif operation == "atanh":
                result = math.atanh(n1)  # Не нужно преобразование
            elif operation == "fabs":
                result = math.fabs(n1)  # Не нужно преобразование
            elif operation == "pi":
                result = math.pi
            elif operation == "log":
                n2 = float(num2.value)
                if n2 > 0:
                    result = math.log(n1, n2)  # Логарифм по основанию n2
                else:
                    result = "Ошибка: основание логарифма должно быть больше 0"
            elif operation == "exp":
                result = math.exp(n1)  # Экспонента
            elif operation == "mod":
                n2 = float(num2.value)
                result = n1 % n2  # Остаток от деления
            else:
                result = "Ошибка: неизвестная операция"

            result_text.value = f"Результат: {result}"  # Обновляем результат
        except ValueError:
            result_text.value = "Ошибка: неверный ввод"

    # Кнопки операций с уменьшенным размером
    operations = ["+", "-", "*", "/", "sqrt", "^", 
                 "sin", "cos", "tan", "asin", "acos", "atan", 
                 "sinh", "cosh", "tanh", "asinh", "acosh", "atanh", 
                 "fabs", "pi", "log", "exp", "mod"]
    
    # Создаем кнопки с фиксированной шириной
    buttons = [ft.ElevatedButton(
        op, 
        on_click=calculate,
        width=80,
        height=40
    ) for op in operations]

    # Создаем контейнер Wrap для кнопок
    wrap_buttons = ft.Wrap(
        buttons,
        spacing=10,  # Расстояние между кнопками
        run_spacing=10,  # Расстояние между рядами
    )

    # Добавляем элементы на страницу
    page.add(
        ft.Column([
            num1,
            num2,
            wrap_buttons,
            result_text
        ])
    )

ft.app(target=main)
